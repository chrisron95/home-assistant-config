###############################################################################
#   @author         :   Jeffrey Stone
#   @date           :   02/19/2019
#   @package        :   Weather
#   @description    :   Weather and NWS Alerts
#   @original       :   https://github.com/Vasiley/Home-Assistant-Main/blob/master/packages/weather_alerts_nws.yaml
#
#   @modified by    :   Chris Heder (@chrisron95)
#   @date           :   05/12/2022
###############################################################################

homeassistant:
  customize:
    sensor.nws_alert_count:
      friendly_name: Alerts
      icon: mdi:alert-outline

group:
  alerts_card:
    name: Alerts
    entities:
      - sensor.nws_alerts

input_boolean:
  weather_alert_texts:
    name: Weather Alert Texts
    icon: mdi:cellphone-message
  lightning_warning:
    name: Lightning Warning
    icon: mdi:flash-alert
  tstorm_alarm:
    name: T-Storm Alarm
    icon: mdi:speaker-wireless
  raining:
    name: Raining

sensor:
  - platform: weatheralerts
    state: FL
    zone: 71
    county: 11
  - platform: statistics
    name: Inside Humidity Stats
    entity_id: sensor.current_inside_humidity
    state_characteristic: mean
    sampling_size: 500

  - platform: template
    sensors:
      current_forecast:
        friendly_name: Current Forecast
        unit_of_measurement: ""
        icon_template: mdi:weather-sunny
        value_template: >-
          {% if state_attr('weather.home_2','forecast')[0] is defined %}
            {% set forecast = state_attr('weather.home_2','forecast')[0] %}
            {% if forecast.condition == 'partlycloudy' %}
              partly cloudy
            {% else %}
              {{ forecast.condition }}
            {% endif %}
          {% else %}
            Undefined
          {% endif %}
        attribute_templates:
          high_temp: >-
            {% if state_attr('weather.home_2','forecast')[0] is defined %}
              {% set forecast = state_attr('weather.home_2','forecast')[0] %}
              {{ forecast.temperature }}
            {% else %}
              Undefined
            {% endif %}
          overnight_low: >-
            {% if state_attr('weather.home_2','forecast')[1] is defined %}
              {% set forecast = state_attr('weather.home_2','forecast')[1] %}
              {{ forecast.templow }}
            {% else %}
              Undefined
            {% endif %}
          wind_bearing: >-
            {% if state_attr('weather.home_2','forecast')[0] is defined %}
              {% set forecast = state_attr('weather.home_2','forecast')[0] %}
              {{ forecast.wind_bearing }}
            {% else %}
              Undefined
            {% endif %}
          wind_speed: >-
            {% if state_attr('weather.home_2','forecast')[0] is defined %}
              {% set forecast = state_attr('weather.home_2','forecast')[0] %}
              {{ forecast.wind_speed }}
            {% else %}
              Undefined
            {% endif %}
          precipitation: >-
            {% if state_attr('weather.home_2','forecast')[0] is defined %}
              {% set forecast = state_attr('weather.home_2','forecast')[0] %}
              {{ forecast.precipitation }}
            {% else %}
              Undefined
            {% endif %}
      current_forecast_detail:
        friendly_name: Current Forecast Detail
        unit_of_measurement: ""
        icon_template: mdi:weather-sunny
        value_template: >-
          {%- macro getReport() -%}
            {{ [
              'Today in Tamarac ', 
              'Later Today ',
              'For the rest of the day'
              ] | random }}
            expect a high of {{ state_attr('sensor.current_forecast','high_temp') }}
            {%- if states('sensor.current_forecast') == 'sunny' and is_state('binary_sensor.night','off')%}
              {{ [
                  'and sunny. ', 
                  'with sun. ',
                  'with sunny conditions prevailing. '
                  ] | random }}
            {%- elif states('sensor.current_forecast') == 'sunny' and is_state('binary_sensor.night','on') %}
              {{ [
                'and clear. ', 
                'with clear skies. '
                ] | random }}
            {%- elif states('sensor.current_forecast') == 'clear-night' %}
              {{ [
                'and clear. ', 
                'with clear skies. '
                ] | random }}
            {%- elif states('sensor.current_forecast') == 'rainy' %}
              {{ [
                'with rain. ', 
                'with showers. ',
                'and rainy. '
                ] | random }}
              {{ [
                'Rainfall accumulations ', 
                'Total Rainfall amounts '
                ] | random }}
                near {{ state_attr('sensor.current_forecast','precipitation') }} inches
                possible.
            {%- elif states('sensor.current_forecast') == 'snowy' %}
              {{ [
                'with snow. ', 
                'with snow showers. '
                ] | random }}
              {{ [
                'Snowfall accumulations ', 
                'Total snowfall amounts '
                ] | random }}
                near {{ state_attr('sensor.current_forecast','precipitation') }} inches
                possible.
            {%- elif states('sensor.current_forecast') == 'snowy-rainy' %}
              {{ [
                  'with mix preciptation possible. ', 
                  'with snow and rain showers. '
                  ] | random }}
              Total accumulation near {{ state_attr('sensor.current_forecast','precipitation') }} inches
                possible.    
            {%- elif states('sensor.current_forecast') == 'windy' %}
              {{ [
                'and windy. ', 
                'with lots of wind. '
                ] | random }}
            {%- elif states('sensor.current_forecast') == 'fog' %}
              {{ [
                'and foggy. ', 
                'with some fog. '
                ] | random }}
            {% elif states('sensor.current_forecast') == 'cloudy' %}
              {{ [
                'with clouds. ', 
                'with cloudy skies. '
                ] | random }}
            {% elif states('sensor.current_forecast') == 'partlycloudy' %}
              {{ [
                  'with some clouds. ', 
                  'with partly cloudy skies. ',
                  'with scattered clouds'
                  ] | random }}
            {%- elif states('sensor.current_forecast') == 'hail' %}
              {{ [
                'with severve thunderstorms possible. ', 
                'with hail possible. '
                ] | random }}
              {{ [
                'Rainfall accumulations ', 
                'Total Rainfall amounts '
                ] | random }}
                near {{ state_attr('sensor.current_forecast','precipitation') }} inches
                possible.
            {%- elif states('sensor.current_forecast') == 'lightning' %}
              {{ [
                'with thunderstorms possible. ', 
                'with the potential of thunderstorms. '
                ] | random }}
              {{ [
                'Rainfall accumulations ', 
                'Total Rainfall amounts '
                ] | random }}
                near {{ state_attr('sensor.current_forecast','precipitation') }} inches
                possible.
            {% endif -%}

            {{ [
                'Later tonight expect a low of ', 
                'Overnight expect a low of '
                ] | random }}
            {{ state_attr('sensor.current_forecast','overnight_low') }} degrees. 
          {%- endmacro -%}
          {# a macro that removes all newline characters, empty spaces, and returns formatted text  #}
            {%- macro cleanup(data) -%}
              {%- for item in data.split("\n")  if item | trim != "" -%}
                {{ item | trim }} {% endfor -%}
          {%- endmacro -%}

          {# a macro to call all macros :)  #}
            {%- macro mother_of_all_macros() -%}
              {{ getReport() }}
            {%- endmacro -%}
            
            {# Call the macro  #}
            {{- cleanup(mother_of_all_macros()) -}}
      tomorrow_forecast:
        friendly_name: Tomorrows Forecast
        unit_of_measurement: ""
        icon_template: mdi:weather-sunny
        value_template: >-
          {% if state_attr('weather.home_2','forecast')[1] is defined %}
            {% set forecast = state_attr('weather.home_2','forecast')[1] %}
            {{ forecast.condition }}
          {% else %}
            Undefined
          {% endif %}
        attribute_templates:
          high_temp: >-
            {% if state_attr('weather.home_2','forecast')[1] is defined %}
              {% set forecast = state_attr('weather.home_2','forecast')[1] %}
              {{ forecast.temperature }}
            {% else %}
              Undefined
            {% endif %}
          overnight_low: >-
            {% if state_attr('weather.home_2','forecast')[2] is defined %}
              {% set forecast = state_attr('weather.home_2','forecast')[2] %}
              {{ forecast.templow }}
            {% else %}
              Undefined
            {% endif %}
          wind_bearing: >-
            {% if state_attr('weather.home_2','forecast')[1] is defined %}
              {% set forecast = state_attr('weather.home_2','forecast')[1] %}
              {{ forecast.wind_bearing }}
            {% else %}
              Undefined
            {% endif %}
          wind_speed: >-
            {% if state_attr('weather.home_2','forecast')[1] is defined %}
              {% set forecast = state_attr('weather.home_2','forecast')[1] %}
              {{ forecast.wind_speed }}
            {% else %}
              Undefined
            {% endif %}
          precipitation: >-
            {% if state_attr('weather.home_2','forecast')[1] is defined %}
              {% set forecast = state_attr('weather.home_2','forecast')[1] %}
              {{ forecast.precipitation }}
            {% else %}
              Undefined
            {% endif %}
      tomorrow_forecast_detail:
        friendly_name: Tomorrow Forecast Detail
        unit_of_measurement: ""
        icon_template: mdi:weather-sunny
        value_template: >-
          {%- macro getReport() -%}
            {{ [
              'Tomorrow in Tamarac ', 
              'For the next day ',
              'Tomorrow '
              ] | random }}
            expect a high of {{ state_attr('sensor.tomorrow_forecast','high_temp') }}
            {%- if states('sensor.tomorrow_forecast') == 'sunny' %}
              {{ [
                  'and sunny. ', 
                  'with sun. ',
                  'with sunny conditions prevailing. '
                  ] | random }}
            {%- elif states('sensor.tomorrow_forecast') == 'rainy' %}
              {{ [
                'with rain. ', 
                'with showers. ',
                'and rainy. '
                ] | random }}
              {{ [
                'Rainfall accumulations ', 
                'Total Rainfall amounts '
                ] | random }}
                near {{ state_attr('sensor.tomorrow_forecast','precipitation') }} inches
                possible.
            {%- elif states('sensor.tomorrow_forecast') == 'snowy' %}
              {{ [
                'with snow. ', 
                'with snow showers. '
                ] | random }}
              {{ [
                'Snowfall accumulations ', 
                'Total snowfall amounts '
                ] | random }}
                near {{ state_attr('sensor.tomorrow_forecast','precipitation') }} inches
                possible.
            {%- elif states('sensor.tomorrow_forecast') == 'snowy-rainy' %}
              {{ [
                  'with mix preciptation possible. ', 
                  'with snow and rain showers. '
                  ] | random }}
              Total accumulation near {{ state_attr('sensor.tomorrow_forecast','precipitation') }} inches
                possible.    
            {%- elif states('sensor.tomorrow_forecast') == 'windy' %}
              {{ [
                'and windy. ', 
                'with lots of wind. '
                ] | random }}
            {%- elif states('sensor.current_forecast') == 'fog' %}
              {{ [
                'and foggy. ', 
                'with some fog. '
                ] | random }}
            {% elif states('sensor.tomorrow_forecast') == 'cloudy' %}
              {{ [
                'with clouds. ', 
                'with cloudy skies. '
                ] | random }}
            {% elif states('sensor.tomorrow_forecast') == 'partlycloudy' %}
              {{ [
                  'with some clouds. ', 
                  'with partly cloudy skies. ',
                  'with scattered clouds'
                  ] | random }}
            {%- elif states('sensor.tomorrow_forecast') == 'hail' %}
              {{ [
                'with severve thunderstorms possible. ', 
                'with hail possible. '
                ] | random }}
              {{ [
                'Rainfall accumulations ', 
                'Total Rainfall amounts '
                ] | random }}
                near {{ state_attr('sensor.current_forecast','precipitation') }} inches
                possible.
            {%- elif states('sensor.current_forecast') == 'lightning' %}
              {{ [
                'with thunderstorms possible. ', 
                'with the potential of thunderstorms. '
                ] | random }}
              {{ [
                'Rainfall accumulations ', 
                'Total Rainfall amounts '
                ] | random }}
                near {{ state_attr('sensor.current_forecast','precipitation') }} inches
                possible.
            {% endif -%}

            {{ [
                ' Tomorrow night expect a low of '
                ] | random }}
            {{ state_attr('sensor.tomorrow_forecast','overnight_low') }} degrees. 
          {%- endmacro -%}
          {# a macro that removes all newline characters, empty spaces, and returns formatted text  #}
            {%- macro cleanup(data) -%}
              {%- for item in data.split("\n")  if item | trim != "" -%}
                {{ item | trim }} {% endfor -%}
          {%- endmacro -%}

          {# a macro to call all macros :)  #}
            {%- macro mother_of_all_macros() -%}
              {{ getReport() }}
            {%- endmacro -%}
            
            {# Call the macro  #}
            {{- cleanup(mother_of_all_macros()) -}}
      current_conditions:
        friendly_name: Current Conditions
        unit_of_measurement: ""
        icon_template: mdi:weather-sunny
        value_template: >-
          {%- macro getReport() -%}
            The Weather in Tamarac
            {{ [
            ' is ', 
            ' is currently '
            ] | random }}
            {{states('sensor.front_yard_temperature')|round}} degrees 
            {% if is_state('weather.home', 'rainy') %}
              {{ [
              'with rain. ', 
              'with showers. '
              ] | random }}
            {% elif is_state('weather.home', 'cloudy') %}
              {{ [
              'with clouds. ', 
              'with cloudy skies. '
              ] | random }}
            {% elif is_state('weather.home', 'partlycloudy') %}
              {{ [
              'with some clouds. ', 
              'with partly cloudy skies. ',
              'with scatterd clouds'
              ] | random }}
            {% elif is_state('weather.home', 'sunny') %}
              {% if is_state('sun.sun', 'above_horizon') %}
                {{ [
                'and sunny. ', 
                'with sun. '
                ] | random }}
              {% else %}
                {{ [
                'and clear. ', 
                'with clear skies. '
                ] | random }}
              {% endif %}
            {% else %}
              and {{ states('weather.home_2') }}
            {% endif %}
          {%- endmacro -%}
          {# a macro that removes all newline characters, empty spaces, and returns formatted text  #}
            {%- macro cleanup(data) -%}
              {%- for item in data.split("\n")  if item | trim != "" -%}
                {{ item | trim }} {% endfor -%}
          {%- endmacro -%}

          {# a macro to call all macros :)  #}
            {%- macro mother_of_all_macros() -%}
              {{ getReport() }}
            {%- endmacro -%}
            
            {# Call the macro  #}
            {{- cleanup(mother_of_all_macros()) -}}
      current_conditions_detail:
        friendly_name: Current Conditions Detail
        unit_of_measurement: ""
        icon_template: mdi:weather-sunny
        value_template: >-
          {%- macro getReport() -%}
            The Weather in Tamarac
            {{ [
            ' is ', 
            ' is currently '
            ] | random }}
            {{states('sensor.front_yard_temperature')|round}} degrees 
            {% if is_state('weather.home', 'rainy') %}
              {{ [
              'with rain. ', 
              'with showers. '
              ] | random }}
            {% elif is_state('weather.home', 'cloudy') %}
              {{ [
              'with clouds. ', 
              'with cloudy skies. '
              ] | random }}
            {% elif is_state('weather.home', 'partlycloudy') %}
              {{ [
              'with some clouds. ', 
              'with partly cloudy skies. ',
              'with scatterd clouds'
              ] | random }}
            {% elif is_state('weather.home', 'sunny') %}
              {% if is_state('sun.sun', 'above_horizon') %}
                {{ [
                'and sunny. ', 
                'with sun. '
                ] | random }}
              {% else %}
                {{ [
                'and clear. ', 
                'with clear skies. '
                ] | random }}
              {% endif %}
            {% else %}
              and {{ states('weather.home_2') }}
            {% endif %}
            {%- if is_state('binary_sensor.night','off')%}
              {{ [ 
                'Later Today ',
                'For the rest of the day'
                ] | random }}
              expect a high of {{ state_attr('sensor.current_forecast','high_temp') }}
              {%- if states('sensor.current_forecast') == 'sunny' and is_state('binary_sensor.night','off')%}
                {{ [
                    'and sunny. ', 
                    'with sun. ',
                    'with sunny conditions prevailing. '
                    ] | random }}
              {%- elif states('sensor.current_forecast') == 'sunny' and is_state('binary_sensor.night','on') %}
                {{ [
                  'and clear. ', 
                  'with clear skies. '
                  ] | random }}
              {%- elif states('sensor.current_forecast') == 'clear-night' %}
                {{ [
                  'and clear. ', 
                  'with clear skies. '
                  ] | random }}
              {%- elif states('sensor.current_forecast') == 'rainy' %}
                {{ [
                  'with rain. ', 
                  'with showers. ',
                  'and rainy. '
                  ] | random }}
                {{ [
                  'Rainfall accumulations ', 
                  'Total Rainfall amounts '
                  ] | random }}
                  near {{ state_attr('sensor.current_forecast','precipitation') }} inches
                  possible.
              {%- elif states('sensor.current_forecast') == 'snowy' %}
                {{ [
                  'with snow. ', 
                  'with snow showers. '
                  ] | random }}
                {{ [
                  'Snowfall accumulations ', 
                  'Total snowfall amounts '
                  ] | random }}
                  near {{ state_attr('sensor.current_forecast','precipitation') }} inches
                  possible.
              {%- elif states('sensor.current_forecast') == 'snowy-rainy' %}
                {{ [
                    'with mix preciptation possible. ', 
                    'with snow and rain showers. '
                    ] | random }}
                Total accumulation near {{ state_attr('sensor.current_forecast','precipitation') }} inches
                  possible.    
              {%- elif states('sensor.current_forecast') == 'windy' %}
                {{ [
                  'and windy. ', 
                  'with lots of wind. '
                  ] | random }}
              {%- elif states('sensor.current_forecast') == 'fog' %}
                {{ [
                  'and foggy. ', 
                  'with some fog. '
                  ] | random }}
              {% elif states('sensor.current_forecast') == 'cloudy' %}
                {{ [
                  'with clouds. ', 
                  'with cloudy skies. '
                  ] | random }}
              {% elif states('sensor.current_forecast') == 'partlycloudy' %}
                {{ [
                    'with some clouds. ', 
                    'with partly cloudy skies. ',
                    'with scattered clouds'
                    ] | random }}
              {%- elif states('sensor.current_forecast') == 'hail' %}
                {{ [
                  'with severve thunderstorms possible. ', 
                  'with hail possible. '
                  ] | random }}
                {{ [
                  'Rainfall accumulations ', 
                  'Total Rainfall amounts '
                  ] | random }}
                  near {{ state_attr('sensor.current_forecast','precipitation') }} inches
                  possible.
              {%- elif states('sensor.current_forecast') == 'lightning' %}
                {{ [
                  'with thunderstorms possible. ', 
                  'with the potential of thunderstorms. '
                  ] | random }}
                {{ [
                  'Rainfall accumulations ', 
                  'Total Rainfall amounts '
                  ] | random }}
                  near {{ state_attr('sensor.current_forecast','precipitation') }} inches
                  possible.
              {% endif -%}

              {{ [
                  'Later tonight expect a low of ', 
                  'Overnight expect a low of '
                  ] | random }}
              {{ state_attr('sensor.current_forecast','overnight_low') }} degrees. 
          {%- else -%}
            {{ [
                  'Tonight expect a low of ', 
                  'Overnight expect a low of '
                  ] | random }}
              {{ state_attr('sensor.current_forecast','overnight_low') }} degrees.
          {% endif %} 
          {%- endmacro -%}
          {# a macro that removes all newline characters, empty spaces, and returns formatted text  #}
            {%- macro cleanup(data) -%}
              {%- for item in data.split("\n")  if item | trim != "" -%}
                {{ item | trim }} {% endfor -%}
          {%- endmacro -%}

          {# a macro to call all macros :)  #}
            {%- macro mother_of_all_macros() -%}
              {{ getReport() }}
            {%- endmacro -%}
            
            {# Call the macro  #}
            {{- cleanup(mother_of_all_macros()) -}}
      outside_pressure:
        friendly_name: "outisde pressure"
        value_template: "{{ state_attr('weather.home_2','pressure') }}"
        unit_of_measurement: ""
      todays_high_temp:
        friendly_name: "Today's High Temp"
        unit_of_measurement: ""
        device_class: temperature
        value_template: >-
          {% if state_attr('weather.home_2','forecast')[0] is defined %}
            {% set forecast = state_attr('weather.home_2','forecast')[0] %}
            {{ forecast.temperature }}
          {% else %}
            Undefined
          {% endif %}
      tonights_low_temp:
        friendly_name: "Tonight's Low Temp"
        unit_of_measurement: ""
        device_class: temperature
        value_template: >-
          {% if state_attr('weather.home_2','forecast')[1] is defined %}
            {% set forecast = state_attr('weather.home_2','forecast')[1] %}
            {{ forecast.lowtemp }}
          {% else %}
            Undefined
          {% endif %}
      clothing_forecast:
        friendly_name: "Clothing Forecast"
        unit_of_measurement: ""
        value_template: >-
          {% if is_state('binary_sensor.overnight', 'off') %}
            {% set temp = states('sensor.todays_high_temp')|int %}
          {% else %}  
            {% set temp = states('sensor.front_yard_temperature')|round %}
          {% endif %}
          {%- if states('sensor.todays_high_temp')|int > 63 %}
            {%- if states('sensor.todays_high_temp')|int < 80 %}
              Nice
            {% elif states('sensor.todays_high_temp')|int > 95 %}
              Hot
            {% else %}
              Toasty
            {%- endif %}
          {% elif states('sensor.todays_high_temp')|int < 64 %}
            {%- if states('sensor.todays_high_temp')|int < 32 %}
              Freezing
            {% elif states('sensor.todays_high_temp')|int > 50 %}
              Chilly
            {% else %}
              Cold
            {%- endif %}
          {% else %}
            Unknown
          {%- endif %}
      clothing_forecast_detail:
        friendly_name: "Clothing Forecast Detail"
        unit_of_measurement: ""
        value_template: >-
          {% if is_state('binary_sensor.morning','on') %}
            Based on the forecasted high temperature, 
            {% if is_state('sensor.clothing_forecast', 'Freezing') %}
              It is going to be freezing today. so I suggest wearing long pants and a heavy coat.
            {% elif is_state('sensor.clothing_forecast','Cold') %}
              It is going to be cold today. so I suggest wearing long pants and a light jacket.
            {% elif is_state('sensor.clothing_forecast', 'Chilly') %}
              It is going to be chilly today. so I suggest wearing at least long pants.
            {% elif is_state('sensor.clothing_forecast', 'Nice') %}
              It is going to be           
              {{ [ 'nice outside. ',
                'pretty nice outside. ',
                'a good day to be outside. ',
                'rather enjoyable outside. ',
              ] | random }} 
              So I suggest wearing shorts.
            {% elif is_state('sensor.clothing_forecast', 'Toasty') %}
              It is going to be 
              {{ [ 'bit warm ',
                ' rather warm outside ',
                ' almost too hot outside ',
                ' a little warm ',
              ] | random }} 
              today. So I suggest wearing shorts. 
            {% elif is_state('sensor.clothing_forecast', 'Hot') %}
              It is going to be 
              {{ [ 'hot',
                'hotter than the sun ',
                'hotter than hot. but in a lot of bad ways ',
                'hotter than the sun outside ',
                'super hot ',
                'hotter than the inside of a volcano '
              ] | random }} 
              today. So I suggest wearing shorts.
            {% else %}
              It is going to be {{ states('sensor.clothing_forecast') }} today so I suggest wearing shorts.
            {% endif %} 
          {% else %}
            Based on the current temperature, 
            {% if is_state('sensor.clothing_forecast', 'Freezing') %}
              Hell has frozen over and it is actually freezing. so I suggest wearing long pants and a heavy coat if you are going out.
            {% elif is_state('sensor.clothing_forecast','Cold') %}
              It is actually cold outside. so I suggest wearing long pants and a light jacket.
            {% elif is_state('sensor.clothing_forecast', 'Chilly') %}
              It is chilly right now believe it or not. so I suggest wearing at least long pants 
              if you are going to venture outside.
            {% elif is_state('sensor.clothing_forecast', 'Nice') %}
              It is            
              {{ [ 'surprisingly nice outside. ',
                'actually pretty nice outside. ',
                'a good day to be outside for a change. ',
                'actually rather enjoyable outside. ',
              ] | random }} 
              So I suggest wearing shorts.
            {% elif is_state('sensor.clothing_forecast', 'Toasty') %}
              It is 
              {{ [ 'bit warm ',
                ' rather warm outside ',
                ' almost too hot outside ',
                ' a little warm ',
              ] | random }} 
              outside. So I suggest wearing shorts. 
            {% elif is_state('sensor.clothing_forecast', 'Hot') %}
              It is 
              {{ [ 'hot',
                'hotter than the sun ',
                'hotter than hot. In a lot of bad ways ',
                'hotter than the surface of the sun outside ',
                'super hot ',
                'hotter than the inside of a volcano '
                'hotter than Stevens butt '
                'hotter than a Hot Pocket microwaved for six minutes '
              ] | random }} 
              outside. So I suggest wearing shorts.
            {% else %}
              It is {{ states('sensor.clothing_forecast') }} right now so I suggest wearing shorts.
            {% endif %} 
          {% endif %}
      nws_current_visibility:
        friendly_name: "Current Visability"
        value_template: "{{ ((state_attr('weather.home_2','visibility') | int) * 0.621371) | round }}"

      current_inside_humidity:
        friendly_name: "Current Inside Humidity"
        unit_of_measurement: "%"
        value_template: "{{ state_attr('climate.my_ecobee','current_humidity') }}"

