>
  {# Daily Briefing #}
  {%- macro getReport() -%}
      <p>
        {% if now().strftime('%H')|int < 12 %}
          Good morning sir.
        {% elif now().strftime('%H')|int >= 12 and now().strftime('%H')|int < 17 %}
          Good afternoon sir.
        {% else %}
          Good evening sir.
        {% endif %}
      </p>
      
      {% if is_state('binary_sensor.morning','on') %}
        <p> 
          Today is {{states('sensor.today_is') }}, {{ as_timestamp(now()) | timestamp_custom('%B %d %Y') }}.
        </p>
      {% else %}
        <p>
          It is <say-as interpret-as="time">{{ now().strftime("%I:%M %p") }}</say-as>
        </p>
      {% endif %}
      
      <p>
        {{ states('sensor.current_conditions') }}

        {% if states('sensor.weatheralerts_1_active_alerts') | int > 1 %}
          There are currently {{states('sensor.weatheralerts_1_active_alerts') }} active weather alerts for our area.
        {% elif states('sensor.weatheralerts_1_active_alerts') | int > 0 %}
          There is currently {{states('sensor.weatheralerts_1_active_alerts') }} active weather alert for our area.
        {% endif %}

        {% if is_state('binary_sensor.evening','on') %}
          The overnight forecast says we can expect {{ states('sensor.overnight_forecast') }}    
        {% else %}
          The current forecast says we should expect {{ states('sensor.current_forecast') }} 
          {% if is_state('input_boolean.freeze_warning','on') %}
          And based on the forecasted low, It will be near or below freezing.
            {{ [ 'So, Someone might want to bring the plants in. ',
                'Like, the turn water solid kind of cold. Do not leave the plants out to die. ',
                'I suggest bringing in the plants other wise, the temperature might kill them. And that will be on you. ',
                'I would say winter is coming. But, based on the weather forecast it appears to be here. ',
                'I would bring in the plants but I lack legs. And Arms. So I am forced to rely on you. Do not let me down. '
              ] | random }}
          {% endif %}
        {% endif %}
      </p>
      
      <p>
        {% if is_state('sun.sun', 'below_horizon') %}
          You have
          {% set seconds = as_timestamp(state_attr('sun.sun', 'next_rising'))-now().timestamp() %}
          {% set hours = seconds / 60 %}
          {% if seconds / ( 60 * 60 ) > 1 %}
            {{ (seconds //  ( 60 * 60 )) | int }} hours
          {% else %}
            {{ (seconds // 60) | int }} minutes
          {% endif %}
          {{ [
            'until the sun rises. ',
            'until the sun is up. ',
            'before the sun officially rises. '
          ]|random }}
        {% else %}
          You have
          {% set seconds = as_timestamp(state_attr('sun.sun', 'next_setting'))-now().timestamp() %}
          {% set hours = seconds / 60 %}
          {% if seconds / ( 60 * 60 ) > 1 %}
            {{ (seconds //  ( 60 * 60 )) | int }} hours
          {% else %}
            {{ (seconds // 60) | int }} minutes
          {% endif %}
          {{ [
            'until the sun sets for the day. ',
            'until the sun slips below the horizon. ',
            'before the sun officially sets. '
          ]|random }}
        {% endif %}
      
      </p>

      {% if is_state('binary_sensor.octoprint_printing_2', 'on') %}
        <p>
          {%- set time_left = state_attr('sensor.octoprint_print_progress','printTimeLeftFormatted').split(':') %}
            there is a 3D print actively printing, currently at {{ states('sensor.octoprint_print_progress') }} percent complete.
            Theres
          {% if int(time_left[0]) != 0 %}
            {{ int(time_left[0]) }} hour{{ 's' if int(time_left[0]) != 1 }},
          {% endif %}
            {{ int(time_left[1]) }} minute{{ 's' if int(time_left[1]) != 1 }},
            and {{ int(time_left[2]) }} second{{ 's' if float(time_left[2]) != 1 }} left
        </p>
      {% endif %}

      
      {% if is_state('binary_sensor.morning','on') %}
        <p>
          Overnight,

          {%- if is_state('sensor.front_door_motion_away_count','0') %}
            There was no motion detected at the front door.
          {% else %}
            I detected motion at the front door {{ states('sensor.front_door_motion_away_count') | int }} times.
          {% endif %}

          {% if is_state('input_boolean.print_completed_overnight', 'on') %}
            Also, your 3D print completed while you slept.
          {% endif %}
        </p>
      {% endif %}
      
      {% set dow = as_timestamp(now()) | timestamp_custom('%A') %}
      <p>

        {% if dow == 'Monday' %}
          {% if is_state('binary_sensor.evening','on') %}
            {{ [ 'Do not forget tomorrow is Trash and Recycling Day. ',
              ' The trash and recycling should go out tonight. '
            ] | random }}
          {% endif %}
        {% endif %}

        {% if dow == 'Tuesday' %}
          {% if is_state('binary_sensor.evening','on') %}
              {{ [ 'Do not forget to bring in the trash cans. ',
              'The trash cans will feel lonely if you leave them out all night. ',
              'The <say-as interpret-as="characters">HOA</say-as> will get mad if you leave those trash cans out on the street. '
            ] | random }}
          {% endif %}
          {% if is_state('binary_sensor.morning','on') %}
            {{ [ 'Today is Trash Day. ',
              ' The trash and recycle should go out this morning. ',
              'Do not forget to take the trash out. '
            ] | random }}
          {% endif %}
        {% endif %}

        {% if is_state('binary_sensor.evening','on') %}
        
          {% if states('sensor.holiday_halloween') | int == 1 %}
            Tomorrow is Halloween. I hope you have picked out a costume.
            {{ [ 'I will be going as a dumb home. ',
            'I have prepped the scary music. Just in case. ',
            'I will be going as HAL 9000. The Pod Bay Doors are being installed today. I dare you to ask me to open them. '
            ] | random }}
          {% elif states('sensor.holiday_halloween') | int < 30 %}
            There are only {{states('sensor.holiday_halloween')}} days 
            {{ [ 'until Halloween. ',
            'until Halloween. It might not be enough time. ',
            'until you need a costume. '
            ] | random }} 
          {% else %}  
          {% endif %}
        
          {% if states('sensor.holiday_christmas') | int == 1 %}
            Tomorrow is Christmas. <break time="1s"/> It is practically here! <break time="1s"/> Santa is coming tonight! Do not forget the cookies!
          {% elif states('sensor.holiday_christmas') | int < 31 %}
            There are only {{states('sensor.holiday_christmas')}} days until christmas.
            {{ [ 'All I want for Christmas, is a hippopotamus. ',
            'Hey Steven, I know what you are getting for Christmas. But I am not telling. ',
            'Do not forget to put something under the tree for your favorite smarthome. ',
            'It is starting to smell a lot like Christmas. Or it could be the christmas tree is on fire. Either way, the house smells nice. ',
            'I do not want to be a smarthome. I want to be a dentist. ',
            'Do not eat all the cookies. '
            ] | random }} 
          {% else %}
          {% endif %}
          

          {% if states('sensor.anniversary_our_anniversary') | int == 1 %}
            Tomorrow is your Anniversary. Congratulations you two lovebirds.
          {% endif %}
      
        {% else %}
          {% if is_state('sensor.halloween_countdown','0') %}
            Happy Halloween!
          {% endif %}
          {% if is_state('sensor.christmas_countdown','0') %}
            Merry Christmas!
          {% endif %}
          {% if is_state('sensor.anniversary_our_wedding','0') %}
            Happy Anniversary! It has been an amazing {{ state_attr('sensor.anniversary_our_anniversary', 'current_years') }} years!
          {% endif %}

        {% endif %}

      </p>
      
    
      
        
      <p>
        Around the house,
        {%- if is_state('climate.my_ecobee','off') %}
          <s>The internal climate control system is off. The temperature inside is {{ state_attr('climate.my_ecobee', 'current_temperature') }} degrees. </s>
        {%- elif is_state('climate.my_ecobee','heat_cool') %}
          <s>The internal climate control system will try to keep the temperature between {{ state_attr('climate.my_ecobee', 'target_temp_low') }} and {{ state_attr('climate.my_ecobee', 'target_temp_high') }} degrees.</s>
        {% else %}
          <s>The internal climate control system is set to {{ states('climate.my_ecobee') }} with a current temperature of {{ state_attr('climate.my_ecobee', 'current_temperature') }} which is 
          
          {%- if state_attr('climate.my_ecobee', 'current_temperature') | int - state_attr('climate.my_ecobee', 'temperature') | int |round > 0 %}
            {{ state_attr('climate.my_ecobee', 'current_temperature') | int - state_attr('climate.my_ecobee', 'temperature') | int }} degrees above 
          {%- elif state_attr('climate.my_ecobee', 'current_temperature') | int - state_attr('climate.my_ecobee', 'temperature') | int |round < 0 %}
            {{ (state_attr('climate.my_ecobee', 'current_temperature') | int - state_attr('climate.my_ecobee', 'temperature') | int) | abs }} degrees below
          {% else %}
            right at 
          {% endif %}
          the set point of {{ state_attr('climate.my_ecobee', 'temperature') }} degrees. </s>
        {%- endif -%}
        <s>And The internal humidity is currently {{ state_attr('climate.my_ecobee', 'current_humidity') }} percent. </s>
        <s>The patio is {{states('sensor.patio_temperature')|round}} degrees with a humidity of {{states('sensor.patio_humidity')|round}} percent.</s>

        {%- if is_state('media_player.lab_tv','on') or is_state('light.lab_fan_light','on') %}
          There appears to be activity in the Lab.
          {%- if is_state('media_player.lab_tv','on') %}
          The Lab TV is currently playing 
            {%- if state_attr('media_player.lab_tv', 'source') == 'YouTube' %}
              You Tube.
            {%- elif state_attr('media_player.lab_tv', 'source') == 'HDMI 1' %}
              live tv.
            {% else %}
              {{ state_attr('media_player.lab_tv', 'source') }}.
            {%- endif -%}
          {%- endif -%}
        {%- endif -%}

        {%- if is_state('media_player.bedroom_apple_tv','playing') or is_state('light.bedroom_fan_lights','on') %}
          The bedroom is currently occupied.
          {%- if is_state('media_player.bedroom_apple_tv','playing') %}
            and the Apple TV is currently playing.
          {%- endif -%}
        {%- endif -%}

        There are currently {{ (states.light | selectattr('state', 'eq', 'on') | list | count) | int + (states.switch | selectattr('state', 'eq', 'on') | list | count) | int }} lights
        and switches on. 
          
      </p>
        

  {%- endmacro -%}


  {# a macro that removes all newline characters, empty spaces, and returns formatted text  #}
    {%- macro cleanup(data) -%}
      {%- for item in data.split("\n")  if item | trim != "" -%}
        {{ item | trim }} {% endfor -%}
  {%- endmacro -%}

  {# a macro to call all macros :)  #}
    {%- macro mother_of_all_macros() -%}
      {{ getReport() }}
    {%- endmacro -%}
    
    {# Call the macro  #}
    {{- cleanup(mother_of_all_macros()) -}}
