esphome:
  name: kitchen-sensors

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: "01e83873894029a40e7e9e04b66ba95d"

wifi:
  ssid: !secret wifi_downstairs_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Kitchen-Sensors Fallback Hotspot"
    password: "ON1Gupu6nZ6Q"

captive_portal:
    
i2c:
  sda: 21
  scl: 22
  scan: true
  id: bus_a
  
sensor:
  - platform: bh1750
    name: "Kitchen Ambient Light"
    address: 0x23
    update_interval: 60s
  
  - platform: dht
    pin: 18
    temperature:
      name: "Kitchen Temperature"
    humidity:
      name: "Kitchen Humidity"
    model: DHT22
    update_interval: 60s
    
  - platform: wifi_signal
    name: "Kitchen Sensors WiFi Signal"
    update_interval: 60s
    
  - platform: uptime
    name: "Kitchen Sensors Uptime"
    id: kitchen_sensors_uptime
    update_interval: 60s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: kitchen_sensors_uptime_human
            state: !lambda |-
              int seconds = round(id(kitchen_sensors_uptime).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "") +
                (to_string(seconds) + "s")
              ).c_str();

text_sensor:
  - platform: template
    name: Kitchen Sensors Uptime Human Readable
    id: kitchen_sensors_uptime_human
    icon: mdi:clock-start
    entity_category: diagnostic
    
binary_sensor:
  - platform: gpio
    pin: 19
    name: "Kitchen Motion"
    device_class: motion
    