esphome:
  name: christmas-tree

esp8266:
  board: esp01_1m

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: "f6a7137a45039c265e567ba82760a81d"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Christmas-Tree Fallback Hotspot"
    password: "3fdosWLDgsjb"

captive_portal:
    
    
output:
  - platform: esp8266_pwm
    id: pina
    pin: GPIO12
    frequency: 60Hz
  - platform: esp8266_pwm
    id: pinb
    pin: GPIO14
    frequency: 60Hz

# Create a light using the hbridge
light:
  - platform: hbridge
    id: mainlight
    name: "Christmas Tree Lights"
    pin_a: pina
    pin_b: pinb
    effects:
      - lambda:
          name: Fade Fast
          update_interval: 2s
          lambda: |-
            static int state = 0;
            auto call = id(mainlight).turn_on();
            // Transition of 1000ms = 1s
            call.set_transition_length(3000);
            if (state == 0) {
              call.set_cold_white(0);
              call.set_warm_white(1);
            } else {
              call.set_cold_white(1);
              call.set_warm_white(0);
            }
            call.perform();
            state += 1;
            if (state == 2)
              state = 0;
      - lambda:
          name: Fade Slow
          update_interval: 5s
          lambda: |-
            static int state = 0;
            auto call = id(mainlight).turn_on();
            // Transition of 1000ms = 1s
            call.set_transition_length(3000);
            if (state == 0) {
              call.set_cold_white(0);
              call.set_warm_white(1);
            } else {
              call.set_cold_white(1);
              call.set_warm_white(0);
            }
            call.perform();
            state += 1;
            if (state == 2)
              state = 0;

# fan:
#   - platform: hbridge
#     id: my_fan
#     name: "Christmas Tree Lights"
#     pin_a: pina
#     pin_b: pinb
#     # enable_pin: motor_enable
#     decay_mode: slow   # slow decay mode (braking) or fast decay (coasting).